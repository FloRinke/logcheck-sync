#!/usr/bin/env python3
"""lochchecksync startup wrapper"""
__author__ = 'Florian Rinke'

import argparse
import logging
import logging.config
import os
import sys

from logchecksync import config
from logchecksync import logchecksync

if __name__ == '__main__':
    # parse commandline
    parser = argparse.ArgumentParser(description='Synchronizes logcheck rules from a git repository')
    subparsers = parser.add_subparsers(help='One of these Commands', metavar='command', dest='command')
    parser.add_argument('-d', '--debug', help='Use debug config', action='store_true')

    parser_status = subparsers.add_parser('status', help='Show Status')
    parser_pull = subparsers.add_parser('pull', help='synchronize repo')
    parser_ack = subparsers.add_parser('ack', help='acknowledge new rulefiles without adding/deleting')
    parser_list = subparsers.add_parser('list', help='list rulefile to sync')

    parser_add = subparsers.add_parser('add', help='add a rulefile to sync')
    parser_add.add_argument('rulefile', help='list of rulefiles to add', nargs='+')

    parser_del = subparsers.add_parser('del', help='delete a rulefile from sync')
    parser_del.add_argument('rulefile', help='list of rulefiles to add', nargs='+')

    parser_sync = subparsers.add_parser('sync', help='synchronize repo and selected rules')
    parser_sync.add_argument('-a', '--ack', help='also acknowledge new rulefiles', action='store_true')

    if len(sys.argv) == 1:
        parser.print_usage()
        sys.exit(1)

    args = vars(parser.parse_args())

    # load config
    config.load_config(args['debug'])

    # initialize logging
    # print('data_dir: {0}'.format(config.get('data_dir')))
    path = os.path.join(config.get('data_dir'), 'logging.conf')
    print('load logging config: {0}'.format(path))
    logging.config.fileConfig(path)
    LOG = logging.getLogger(__name__)

    LOG.info("cmdline args: %s", args)

    sys.exit(logchecksync.run(args))
